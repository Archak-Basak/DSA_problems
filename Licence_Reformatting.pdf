You are given a license key represented as a string s that consists of only alphanumeric characters and dashes. The string is separated into n + 1 groups by n dashes. You are also given an integer k.

We want to reformat the string s such that each group contains exactly k characters, except for the first group, which could be shorter than k but still must contain at least one character. Furthermore, there must be a dash inserted between two groups, and you should convert all lowercase letters to uppercase.

Return the reformatted license key.



Example 1:

Input: s = "5F3Z-2e-9-w", k = 4
Output: "5F3Z-2E9W"
Explanation: The string s has been split into two parts, each part has 4 characters.
Note that the two extra dashes are not needed and can be removed.
Example 2:

Input: s = "2-5g-3-J", k = 2
Output: "2-5G-3J"
Explanation: The string s has been split into three parts, each part has 2 characters except the first part as it could be shorter as mentioned above.


Constraints:

1 <= s.length <= 105
s consists of English letters, digits, and dashes '-'.
1 <= k <= 104

--=-=-=-=-=-=-=-=-=-=-=-=-=-==--=--=--=-=--=--=-=-=--=--=-=-==--=--=-=--=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--
in Java
--=-=-=-=-=-=-=-=-=-=-=-=-=-==--=--=--=-=--=--=-=-=--=--=-=-==--=--=-=--=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--

class Solution {
    public String licenseKeyFormatting(String s, int k) {

        String clearStr = s.replace("-","").toUpperCase();

        int fPartStrLen = clearStr.length() % k;

        StringBuilder reformattedStr = new StringBuilder(clearStr.substring(0, fPartStrLen));

        for(int i = fPartStrLen; i < clearStr.length(); i += k) {

            if(reformattedStr.length() > 0) {

                reformattedStr.append("-");
            }
            reformattedStr.append(clearStr.substring(i, Math.min(i + k, clearStr.length())));
        }
        return reformattedStr.toString();
    }
}

--=-=-=-=-=-=-=-=-=-=-=-=-=-==--=--=--=-=--=--=-=-=--=--=-=-==--=--=-=--=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--
in Rust
--=-=-=-=-=-=-=-=-=-=-=-=-=-==--=--=--=-=--=--=-=-=--=--=-=-==--=--=-=--=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--
impl Solution {
    pub fn license_key_formatting(s: String, k: i32) -> String {

        let clear_str: String = s.chars().filter(|&ch| ch != '-').collect();

        let clear_str = clear_str.to_uppercase();

        let f_part_str_len = clear_str.len() % k as usize;

        let mut reformatted_str = String::from(&clear_str[..f_part_str_len]);

        for chunk in clear_str[f_part_str_len..].chars().collect::<Vec<_>>().chunks(k as usize) {

            if !reformatted_str.is_empty() {

                reformatted_str.push('-');
            }
            reformatted_str.push_str(&chunk.iter().collect::<String>());
        }
        reformatted_str
    }
}
