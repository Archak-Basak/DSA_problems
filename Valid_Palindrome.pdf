A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters,
it reads the same forward and backward. Alphanumeric characters include letters and numbers.

Given a string s, return true if it is a palindrome, or false otherwise.

Example 1:

Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.

Example 2:

Input: s = "race a car"
Output: false
Explanation: "raceacar" is not a palindrome.

Example 3:

Input: s = " "
Output: true
Explanation: s is an empty string "" after removing non-alphanumeric characters.
Since an empty string reads the same forward and backward, it is a palindrome.
 

Constraints:

1 <= s.length <= 2 * 105
s consists only of printable ASCII characters.

----------------------------------------------CODE-----------------------------------------------------------

import java.util.*;

class Solution {
    public boolean isPalindrome(String s) {

        if(s.isEmpty()) {

            return true;
        }

        boolean flag = true;

        String str = s.toLowerCase();

        StringBuilder ab = new StringBuilder();

        for(int i = 0; i < str.length(); i++) {

            if(Character.isLetterOrDigit(str.charAt(i))) {

                ab.append(str.charAt(i));
            }
        }
        String newStr = ab.toString();

        for(int i = 0; i < newStr.length() / 2; i++) {

            if(newStr.charAt(i) != newStr.charAt(newStr.length() - i - 1)) {

                flag = false;
                break;
            } 
        }
        return flag; 
    }
	public static void main(String[] args) {
	
		Scanner ab = new Scanner(System.in);
		
		String str = ab.nextLine();
		
		System.out.println(isPalindome(somtr));
		
		ab.close();
	}
}